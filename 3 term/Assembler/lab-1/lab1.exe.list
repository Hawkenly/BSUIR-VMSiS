EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
lab1.exe -- emu8086 assembler version: 4.05  
 
[ 21.12.2023  --  01:42:18 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]        :                                       ;CrLf db 0Dh, 0Ah, '$'
[   5]    0100: 48 65 6C 6C 6F 20 57 6F 72 6C 64 21   message1 db   "Hello World!",0Dh,0Ah,'$'
                0D 0A 24                            
[   6]        :                                       ;message2 db   "Your string:",0Dh,0Ah,'$'
[   7]        :                                       ;bufer db 10
[   8]        :                                       ;string db "$$$$$$$$$$$$"      ;bufer db 10,?,"$$$$$$$$$$"
[   9]        :                                       .code
[  10]    0110:                                       start:
[  11]    0110: B8 10 00                              mov ax,@data
[  12]    0113: 8E D8                                 mov ds,ax
[  13]        :                                       
[  14]    0115: BA 00 00                              mov dx,offset message1
[  15]    0118: B4 09                                 mov ah,09h
[  16]    011A: CD 21                                 int 21h       ;Output message1
[  17]        :                                       
[  18]        :                                       ; mov dx,offset bufer
[  19]        :                                       ; mov ah,0Ah
[  20]        :                                       ; int 21h       ;Input string
[  21]        :                                       
[  22]        :                                       ; mov dx,offset CrLf
[  23]        :                                       ; mov ah,09h
[  24]        :                                       ; int 21h
[  25]        :                                       
[  26]        :                                       ; mov dx,offset message2
[  27]        :                                       ; mov ah,09h
[  28]        :                                       ; int 21h       ;Output message2
[  29]        :                                       
[  30]        :                                       ; mov dx,offset bufer+2
[  31]        :                                       ; mov ah,09h
[  32]        :                                       ; int 21h       ;Output string
[  33]        :                                       
[  34]    011C: B8 00 4C                              mov ax,4C00h    ;End program
[  35]    011F: CD 21                                 int 21h
[  36]        :                                       
[  37]        :                                       end start
[  38]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 21      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 76      -   check sum (l.byte)
0013: 2C      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 11      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 11      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
